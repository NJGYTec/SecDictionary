`#\{
\.sh$
\.pt$
\.h5$
\.pkl$
\?rev=
secret

\.hd5$

\.exe$
\.hdf5$
\Wput\s
\Wget\s
FPaths::
%x[\(\{]
\Wexec\W
socket\(
\Wpost\s
\Wmatch\s
IO\.popen
FMemory::
"[^"#]*#\{
JSON\.load
\Wdelete\s
\Wlucky*\W
\.where.*#{
\Wfrom\(.*#
\Worder\(.*#
\Wwhere\(.*#
\.!!.{0,99}$
@GET.{0,99}$
\WENV\[".*"\]
\$S\$.{0,99}$
@POST.{0,99}$
%x[\(\{].*#\{
Get\[.{0,99}$
FFileHelper::
dblink.{0,99}$
File\..{0,99}$
base64.{0,99}$
\$_GET.{0,99}$
IO\.popen.*#\{
"database/sql"
\Wos\..{0,99}$
Process\.spawn
=\s*{.{0,200}$
\Wcvv\W.{0,99}$
\.![^!].{0,99}$
\$\w+\(.{0,99}$
@Path\(.{0,99}$
\$_POST.{0,99}$
\Wpopen.{0,200}
\Wsystem\W.*#\{
obfusc.{0,200}$
\badd_resource\b
chown\(.{0,199}$
chmod\(.{0,199}$
\W\.exec.{0,99}$
SimpleDB.{0,99}$
FModuleManager::
\Wexec\..{0,99}$
requirements.txt
useradd.{0,200}$
chpasswd.{0,200}$
Page_Load.{0,99}$
\$_COOKIE.{0,99}$
\[Route\(.{0,99}$
dllimport.{0,99}$
publicKey.{0,99}$
order\sby.{0,99}$
\.loads\(.{0,99}$
^[^"\n]*`[^`\n]+`
\.Select\(.{0,99}$
request\.headers\[
queryRaw\(.{0,99}$
--skip-ssl.{0,99}$
\.SaveAs\(.{0,99}$
privateKey.{0,99}$
shell_exec.{0,99}$
\$_REQUEST.{0,99}$
\sunsafe\s.{0,99}$
HttpCookie.{0,99}$
FileStream.{0,99}$
BZ_VERSION.{0,99}$
\.route\(.{0,199}$
copyFile\(.{0,99}$
\$2a\$05\$.{0,99}$
\Wunsafe\W.{0,99}$
s3://[^\.].{3,199}$
\WEXECUTE\W.{0,99}$
\.StartInfo.{0,99}$
(DeepEqual|ValueOf)
CreateEvent.{0,99}$
new\sFile\(.{0,99}$
mongodb://.{0,200}$
System\.Net.{0,99}$
popen\([^)].{0,99}$
torch\.load.{0,99}$
Process\.spawn.*#\{
strcmp.*==.{0,200}$
\.SecretKey.{0,99}$
\$md5\$.*\$.{0,99}$
\Wgets\s*\(.{0,99}$
\$ml\$\d+\$.{0,99}$
\WRequest\..{0,99}$
credit.card.{0,99}$
\WRequest\..{0,99}$
os\.execute.{0,99}$
/endpoints/.{0,99}$
@GetMapping.{0,99}$
\.\s+\$_GET.{0,99}$
url-pattern{0,200}$
new mysqli\(.{0,99}$
\WResponse\..{0,99}$
\.mkString\(.{0,99}$
https://s3-.{3,299}$
filter_input.{0,99}$
FileSystem\W.{0,99}$
\{SSHA512\}.{0,199}$
@Controller.{0,200}$
\.\s+\$_POST.{0,99}$
TODO.*login.{0,200}$
^.{0,99}\'\".{0,99}$
^.{0,99}\"\'.{0,99}$
ZLIB_VERSION.{0,99}$
\"\w+\.exe\".{0,99}$
queryBuilder.{0,99}$
\sSimpleDB\..{0,99}$
signtool.*/p.{0,99}$
\Wexec\s*\(.{0,200}$
u4-netntlm::.{0,99}$
len\s*=.*\*.{0,199}$
ShellExecute.{0,199}$
\Wpopen\s*\(.{0,200}$
KeychainItem.{0,200}$
\.load_file\W.{0,99}$
U_ICU_VERSION.{0,99}$
LIKE.*(%'|'%).{0,99}$
\Wrand\s*\(\W.{0,99}$
no-check-cert.{0,99}$
child_process.{0,99}$
GITHUB_TOKEN.{0,299}$
<\w+>.*\$\w+.{0,200}$
refreshToken.{16,80}$
\WPopen\([^)].{0,99}$
intercept-url{0,200}$
sql\.append\(.{0,99}$
\.getHeader\(.{0,99}$
\.MapRoute\(.{0,299}$
createSQLQuery.{0,99}$
pickle\.load\(.{0,99}$
import\s+torch.{0,99}$
dbms_sql.parse.{0,99}$
TODO.*encrypt.{0,200}$
SQLITE_VERSION.{0,99}$
\WFile\.Copy\(.{0,99}$
check_output\(.{0,99}$
import\s+numpy.{0,99}$
memcpy\(.*([+*]|-[^>])
SecItemUpdate.{0,200}$
\.\s+\$_COOKIE.{0,99}$
kSecValueData.{0,200}$
\.readObject\(.{0,99}$
<bcrypt-hash>.{0,199}$
https?://.*#\{.{0,99}$
\WWriteFile\W.{0,199}$
string\.Format.{0,99}$
key=[^\s";.]*.{0,199}$
\.load_model\(.{0,99}$
\Wsystem\([^)].{0,99}$
new\sProcess\(.{0,99}$
pickle\.loads\(.{0,99}$
JANSSON_VERSION.{0,99}$
LIBCURL_VERSION.{0,99}$
proc_open\s*\(.{0,200}$
\$DCC2\$\d+#.*#.{0,99}$
^.{0,99}\.put\(.{0,99}$
TODO.*password.{0,200}$
^.{0,99}\.get\(.{0,99}$
\W(getRealPath).{0,99}$
\$krb5tgs\$23\$.{0,99}$
rubocop:disable.{0,99}$
\[RoutePrefix\(.{0,99}$
\.SelectRequest.{0,99}$
select\(.*FALSE.{0,99}$
\.\s+\$_REQUEST.{0,99}$
\Wrandom\s*\(\W.{0,99}$
\WPartialView\(.{0,99}$
\WSqlConnection.{0,99}$
create_function.{0,99}$
@RequestMapping.{0,99}$
string\.Join\(.{0,199}$
CipherMode\.ECB.{0,99}$
DisableSecurity.{0,99}$
password.*TODO.{0,200}$
HTTP_USER_AGENT.{0,99}$
k?malloc\(.*([+*]|-[^>])
password\s*=\s*".{0,99}$
PQescapeString\(.{0,99}$
\{ssha512\}06\$.{0,199}$
exec[lv][epP]*\(.{0,99}$
MemoryMappedFile.{0,99}$
MONGOOSE_VERSION.{0,99}$
dbms_sql.execute.{0,99}$
^\s*rails\s*\([0-9\.]+\)
\WBinaryWrite\W.{0,199}$
\{ssha256\}06\$.{0,199}$
\WCVE-\d\d\d\d-.{0,200}$
ProcessStartInfo.{0,99}$
subprocess.run\(.{0,99}$
^.{0,99}\Wexec\(.{0,99}$
^.{0,99}\.post\(.{0,99}$
shell_exec\s*\(.{0,200}$
shell\s*=\s*True.{0,99}$
\Wutil\.Random\W.{0,99}$
\+=\s*v?snprintf.{0,99}$
\Whttp\.Header\W.{0,99}$
\Wsystem\("[^"]*@.{0,99}$
\Wsp_executesql\W.{0,99}$
System\.IO\.Pipes.{0,99}$
curl.{0,99}\s-k\W.{0,99}$
subprocess.call\(.{0,99}$
import\s+fasttext.{0,99}$
^.{0,99}\Wspawn\(.{0,99}$
sprintf.*\%\.\*s.{0,200}$
\w+://\w+:\w+@\w+.{0,99}$
\{ssha1\}06\$.*\$.{0,99}$
insecure-password.{0,99}$
\WCreateProcess\W.{0,99}$
\Wnew\sRandom\(\W.{0,99}$
import\s+java.sql.{0,99}$
require\(\'fs\'\).{0,99}$
\.add_resource\W.{0,200}$
file_get_contents.{0,99}$
io\.WriteString\W.{0,99}$
\.createInsecure\(.{0,99}$
\WBinaryFormatter.{0,200}$
\WMath\.random\(\W.{0,99}$
verify\s*=\s*False.{0,99}$
"select.{0,199}\{.{0,199}$
\$office\$\*2007\*.{0,99}$
\$office\$\*2010\*.{0,99}$
HttpServletRequest.{0,99}$
\$office\$\*2013\*.{0,99}$
\[AllowAnonymous\].{0,99}$
sqlHelper.runQuery.{0,99}$
SkipAuthorization.{0,100}$
(Digest::MD5|Digest::SHA1)
CompileSelectWhere.{0,99}$
^\s*password\s\S{5,99}\s*$
\Wsystem\("[^"]*\$.{0,99}$
\W[0-9a-zA-Z]{27}=.{0,99}$
\W(System\.Random).{0,99}$
checkServerTrusted.{0,99}$
ProcessBuilder\s*\(.{0,99}$
TODO.*authenticate.{0,200}$
password=[^\s";.]*.{0,199}$
\.headers\["[a-zA-Z0-9-]"\]
^[^"\n]*`[^`\n]*#\{[^`\n]+`
\W[0-9a-fA-F]{16}\W.{0,99}$
HttpResponseMessage.{0,99}$
\W[0-9a-zA-Z]{43}\W.{0,99}$
^.{0,200}\|\s*safe.{0,200}$
EXECUTE\s+IMMEDIATE.{0,99}$
"select\s.{1,200}%s.{0,99}$
\W[0-9a-fA-F]{48}\W.{0,99}$
WERKZEUG_DEBUG_PIN.{0,200}$
\W[0-9a-fA-F]{40}\W.{0,99}$
\$oldoffice\$1\*\d+.{0,99}$
^.{0,200}\bnetsh\b.{0,200}$
(readme|\.md|xlmns|doctype)
\W[0-9a-fA-F]{32}\W.{0,99}$
\Wpopen.*\(.*\$.*\).{0,99}$
0x[0-9a-zA-Z]{60}\W.{0,99}$
0x[0-9a-zA-Z]{84}\W.{0,99}$
\W[0-9a-fA-F]{70}\W.{0,99}$
\W[0-9a-fA-F]{50}\W.{0,99}$
string\.Format\(.*{.{0,99}$
\W[0-9a-fA-F]{96}\W.{0,99}$
\W[0-9a-fA-F]{64}\W.{0,99}$
\W[0-9a-fA-F]{56}\W.{0,99}$
^\s*require\([^'"\n]{0,99}$
do\s+shell\s+script.{0,199}$
parse_str\s*\([^\n,]{0,200}$
\W[a-f0-9]{64}:\w+\W.{0,99}$
\W[0-9a-fA-F]{160}\W.{0,99}$
\{x-issha,\s*1024\}.{0,199}$
^.{0,200}\WMarkup\(.{0,200}$
\W[0-9a-fA-F]{160}\W.{0,99}$
ConnectionString\s*=.{0,99}$
OPENSSL_VERSION_TEXT.{0,99}$
FormsAuthentication.{0,199}$
\W[a-f0-9]{32}:\w+\W.{0,99}$
\W[0-9a-fA-F]{128}\W.{0,99}$
HTTP_X_FORWARDED_FOR.{0,99}$
\W[a-f0-9]{40}:\w+\W.{0,99}$
\W[0-9a-fA-F]{136}\W.{0,99}$
RpcServerRegisterIf.{0,199}$
\W(CryptGenRandom)\W.{0,99}$
import\s+torchvision.{0,99}$
\".{0,99}\$.{0,99}\".{0,99}$
\Wcheck_output\([^)].{0,99}$
escapeshellarg\s*\(.{0,200}$
\WRfc2898DeriveBytes.{0,200}$
mysql_escape_string\(.{0,99}$
0x01[0-9a-zA-Z]{90}\W.{0,99}$
<Password>.{5,200}</Password>
\W[a-f0-9]{128}:\w+\W.{0,99}$
add\s+key="\w*key\w*".{1,99}$
PNG_LIBPNG_VER_STRING.{0,99}$
\W\w+\$[a-f0-9]{16}\W.{0,99}$
RequestMethod\.[A-Z]+.{0,99}$
(readme|\.md|\|xlmns|doctype)
0x01[0-9a-zA-Z]{50}\W.{0,99}$
\$\".{0,99}{.{0,99}\".{0,99}$
\'\s*\+.{0,99}\+\s*\'.{0,99}$
AWS_SDK_VERSION_STRING.{0,99}$
\Wexec\..{0,99}(/c|-c).{0,99}$
\s+WHERE\s+[^\n]*\$\w+.{0,99}$
boost::process::child.{0,200}$
xox[baprs]-[^=]*=[^=]*.{0,99}$
(length|size).*ntoh.*(-|\+|\*)
0x02[0-9a-zA-Z]{138}\W.{0,99}$
AES\.DecryptFromBase64.{0,99}$
AES\.DecryptFromBase64.{0,99}$
InsecureRequestWarning.{0,99}$
\$1\$\w{4,99}$\w{4,99}.{0,99}$
\$5\$\w{4,99}$\w{4,99}.{0,99}$
\$6\$\w{4,99}$\w{4,99}.{0,99}$
\$8\$\w{4,99}$\w{4,99}.{0,99}$
scanf\s*\(.*\"[^\"]*%s.{0,99}$
\$9\$\w{4,99}$\w{4,99}.{0,99}$
password[^=\n]{0,30}=.{0,199}$
\WNetworkCredential\(.{0,399}$
MARIADB_PACKAGE_VERSION.{0,99}$
\WInsecureIgnoreHostKey.{0,99}$
\W(exec\ssp_|exec\sxp_).{0,99}$
^.{0,99}\W(GetAsync)\W.{0,199}$
^.{0,200}\Wmktemp\s*\(.{0,200}$
\S{10,199}\.rds\.amazonaws\.com
[D|d]iffie.*[H|h]ellman.{0,99}$
sscanf\s*\(.*\"[^\"]*%s.{0,99}$
api_token=[0-9a-f]{40}.{0,200}$
\.Encrypt\(.{1,99}false.{0,99}$
file_get_contents\s*\(.{0,200}$
fscanf\s*\(.*\"[^\"]*%s.{0,99}$
\Wexecute\s+immediate\W.{0,99}$
#define LIBCURL_VERSION "[^"]+"
"jdbc:\w+://[^"]{0,99}".{0,99}$
tensorflow_model_server.{0,99}$
\W(SqlClient|SqlCommand).{0,99}$
StrictHostKeyChecking=no.{0,99}$
memset\s*\([^,]*,\s*0\s*.{0,99}$
Sprintf\s*\(.*\"[^\"]*%s.{0,99}$
add\s+key="\w*secret\w*".{1,99}$
^.{0,299}x-access-token.{0,299}$
sprintf\s*\(.*\"[^\"]*%s.{0,99}$
(NktHookLib|NKTHOOKLIB).{0,199}$
\W(SqlClient|SqlCommand).{0,99}$
ExecuteStoredProcedure\(.{0,99}$
(f|s|vf|v|vs)\?scanf\s*\(.{0,99}$
^.{0,199}"[a-f0-9]{16,}".{0,199}$
\Weval\(\s*"?\$\w*"?\s*\).{0,99}$
\W(segvs|segv|sigsegv)\W.{0,200}$
"AUTH"[,\s]+"[^\n]{5,99}".{0,99}$
\Wselect\W.{0,99}\Wfrom\W.{0,99}$
IDENTIFIED\s+BY\s+\'[^\n]{0,299}$
md5\$.{0,99}\$[a-zA-Z0-9].{0,99}$
#pragma\s+warning\s*\(\s*suppress
\.execute\(\s*".{0,99}\%s.{0,99}$
assert\(\s*"?\$\w*"?\s*\).{0,99}$
sprintf\s*\(.*\"[^\"]*%ls.{0,99}$
\$apr1\$\w{4,99}$\w{4,99}.{0,99}$
^[^=\n]{0,199}API_KEY[^\n]{7,199}$
AWS_JSONCPP_VERSION_STRING.{0,99}$
(include|require).{0,99}\$.{0,99}$
add\s+key="\w*password\w*".{1,99}$
rubocop:disable\s+Security.{0,99}$
\'jdbc:\w+://[^\']{0,99}\'.{0,99}$
\s--password\s*=\s*[^\$\%].{0,99}$
\W[0-9a-zA-Z\+\.\/]{46}=\W.{0,99}$
allow.{0,10}users.{0,10}=.{0,100}$
strings\.Join\(.{0,199}\'.{0,199}$
trusted\s*=\s*yes.*http://.{0,99}$
\Whttp\.ListenAndServe\(\W.{0,99}$
_protect_identifiers.*FALSE.{0,99}$
allow.{0,10}users.{0,10}\*.{0,100}$
\[ValidateInput.{1,20}false.{0,99}$
\-----BEGIN[A-Z\s]*KEY[A-Z\s]*-----
s.?printf\(.{0,99}(/%s|%s/).{0,99}$
password"[^"]*value="[^"]*.{0,199}$
FltCreateCommunicationPort.{0,199}$
Replace.{0,99}\'.{0,99}\'\'.{0,99}$
^.{0,199}\'\{\s*\d+\s*\}\'.{0,199}$
"[^"]*-[^"]\{[^"]*"\.format.{0,99}$
\S{10,199}\.amazonaws\.com.{0,199}$
^[^$"\n]*"[^$"\n]*/[^$"\n]*".{0,99}$
location.{0,10}path.{0,10}=.{0,100}$
\$keepass\$\*\d+\*\d+\*\d+\*.{0,99}$
^.{0,99}\W(string.Format)\W.{0,199}$
\Whttp\.(Cookie|SetCookie)\W.{0,99}$
^.{0,200}autoescape\s+false.{0,200}$
\{PKCS5S2\}[0-9a-zA-Z]{64}\W.{0,99}$
["\'][A-Za-z0-9/+=]{40}["\'].{0,99}$
\<in\>.{0,199}strings\.Join\(.{0,199}
\Wmysql\s.{0,99}[^-]-p[^\$\%].{0,99}$
\W(printf|vprintf)\s*\([^",]+,[^",]+,
sprintf.*\%\.\*s.{0,99}sizeof.{0,99}$
\.AppendFormat.{1,80}\{\d+\}.{0,199}$
(Replace\("\""|Replace\("\'").{0,99}$
\.Format.{1,80}\s-.{1,80}{\d+}.{0,99}$
\$2\w\$\d+\$[A-Za-z0-9./]{20,}.{0,99}$
\{SSHA512\}[0-9a-zA-Z\+]{95}\W.{0,99}$
^.{0,99}\WLIKE\s*'\%\{\w+}\%'.{0,199}$
\W[0-9a-fA-F]{32}[^:0-9a-fA-F].{0,99}$
TripleDESCryptoServiceProvider.{0,99}$
^[.a-zA-Z0-9_-]+(:[.a-zA-Z0-9_-]+){4}$
rejectUnauthorized.{99}[Ff]alse.{0,99}$
^.{0,200}assword\s*=\s*"[^"]+".{0,200}$
\W(getRemoteAddr|getRemoteHost).{0,99}$
order\s+by.{0,200}\'.{0,200}\$.{0,200}$
(recv|Recv|recvfrom|recvmsg|RecvFrom)\(
Authorization.{0,20}Basic\s\w+.{0,200}$
[A-Z0-9]{1..99}_SECRET[A-Z0-9_]*.{0,99}$
memset\s*\([^,]*,[^,]*,\s*0\s*\).{0,99}$
\W(TODO|HACK|FIXME|XXX|BROKEN)\W.{0,99}$
^.{0,99}\W"\s*\+\s*[^"]{1,199}".{0,199}$
\{SSHA256\}[0-9a-zA-Z\+\/]{47}\W.{0,99}$
".{0,99}\Wand\W.{0,99}".{0,99}\+.{0,99}$
Access-Control-Allow-Origin.*"\*".{0,99}$
\[Http(Post|Get|Patch|Put|Delete).{0,99}$
\W[0-9a-fA-F]{64}:[0-9a-fA-F]{8}\W.{0,99}$
\Winsert\s+into\s+[a-zA-z0-9\.,\*].{0,99}$
\W[0-9a-fA-F]{40}:[0-9a-fA-F]{9}\W.{0,99}$
\W(sn|vsn)printf\s*\([^",]+,[^",]+,[^",]+,
\W[0-9a-fA-F]{40}:[0-9a-fA-F]{32}\W.{0,99}$
\W[0-9a-fA-F]{32}:[0-9a-fA-F]{32}\W.{0,99}$
\W[0-9a-fA-F]{32}:[0-9a-fA-F]{30}\W.{0,99}$
\W[0-9a-fA-F]{64}:[0-9a-fA-F]{64}\W.{0,99}$
\W[0-9a-fA-F]{32}:[0-9a-fA-F]{13}\W.{0,99}$
\W[0-9a-fA-F]{16}:[0-9a-fA-F]{32}\W.{0,99}$
\W[0-9a-fA-F]{16}:[0-9a-fA-F]{10}\W.{0,99}$
\W[0-9a-zA-Z]{48}:[0-9a-zA-Z]{16}\W.{0,99}$
\WSystem\.Security\.Cryptography\W.{0,199}$
wget.{0,200}--no-check-certificate.{0,200}$
\W[0-9a-fA-F]{40}:[0-9a-fA-F]{12}\W.{0,99}$
X509CertificateValidationMode\.None.{0,99}$
\W[0-9a-fA-F]{40}:[0-9a-fA-F]{16}\W.{0,99}$
password"[^",\w]{0,50}"[^"]{0,50}".{0,199}$
(?i)facebook[^=]*=[^=]*[0-9a-f]{32}.{0,99}$
\W[0-9a-fA-F]{40}:[0-9a-fA-F]{20}\W.{0,99}$
^.{0,200}ENV\s*\w*PASS\w*\s*"[^"]+".{0,200}$
\W[0-9a-fA-F]{64}:[0-9a-fA-F]{256}\W.{0,99}$
\W[0-9a-fA-F]{40}:[0-9a-fA-F]{126}\W.{0,99}$
^[^#]*http(s)?://\d+\.\d+\.\d+\.\d+.{0,200}$
\W[0-9a-fA-F]{128}:[0-9a-fA-F]{10}\W.{0,99}$
\W[0-9a-fA-F]{128}:[0-9a-fA-F]{64}\W.{0,99}$
\W[0-9a-fA-F]{130}:[0-9a-fA-F]{40}\W.{0,99}$
\{ssha256\}[0-9a-zA-Z\$\+\/\.]{20,}\W.{0,99}$
\W[0-9a-fA-F]{40}:[0-9a-fA-F]{2,20}\W.{0,99}$
^.{0,99}\W(PutMapping|PostMapping)\W.{0,199}$
\W\w+:\d+:[a-f0-9]{32}:[a-f0-9]{32}\W.{0,99}$
(f|s|vf|v|vs)\?scanf\s*\(.*\"[^\"]*%s.{0,99}$
\W[0-9a-zA-Z]{32}:[0-9a-zA-Z]{2,20}\W.{0,99}$
\W[0-9a-fA-F]{32}:[0-9a-fA-F]{2,20}\W.{0,99}$
\W[0-9a-fA-F]{32}:[0-9a-fA-F]{2,20}\W.{0,99}$
^.{0,99}#define.{0,99}PASSWORD.{0,99}".{0,99}$
clientId.{30,80}googleusercontent.com.{0,299}$
https://([a-zA-Z0-9]+\.)+[a-zA-Z0-9]+.{0,200}$
directoryBrowse.{1,20}enable.{1,20}true.{0,99}$
\{ssha512\}[0-9a-zA-Z\$\.\-\+\/]{20,}\W.{0,99}$
\.Format.{1,80}\{\d+\}.{1,80}\s-.{1,80}.{0,99}$
(?i)github[^=]*=[^=]*[0-9a-zA-Z]{35,40}.{0,99}$
^.{0,199}(("[^\n"$-]*\s--[^-])|("--\w)).{0,199}$
(?i)twitter[^=]*=[^=]*[0-9a-zA-Z]{35,44}.{0,99}$
(?i)STRIPE[^\n]+(sk)_[0-9a-zA-Z_]{10,64}.{0,99}$
(<spring:message|<spring:eval).{0,99}\$\{.{0,99}$
^.{0,200}app\.run.{0,100}debug\s*=\s*True.{0,200}$
\W(f|s|as|d|vf|vs|vas|vd)printf\s*\([^",]+,[^",]+,
(?i)(sk|pk)_(test|live)_[0-9a-zA-Z]{10,32}.{0,99}$
ServerCertificateCustomValidationCallback.{0,299}$
CURLOPT_SSL_VERIFYHOST\s*[=>,]*\s+(false|0).{0,99}$
^[^=\n]{0,199}KEY[^=\n]{0,30}=\s*[^\n\s]{7,199}\s*$
(RIPEMD160|SHA1|MD5|MD2|MD4).{0,99}(.{0,99}){0,99}$
[Aa]zure[Ss]torage[Kk]ey.*[Aa]ccount[Kk]ey.{0,499}$
\.(executeQuery|executequery|executeUpdate).{0,99}$
(PG_MAJORVERSION|PG_VERSION|PG_VERSION_STR).{0,99}$
password\s+[0-9a-zA-Z\+\.\/]{16}\s+encrypted.{0,99}$
^.{0,200}curl[^\n]{0,200}-u[^\n]{0,200}:[^\n]{0,200}$
^[^=\n]{0,199}TOKEN[^=\n]{0,30}=\s*[^\n\s]{7,199}\s*$
[\'"]([1-2]?[0-9]?[0-9]\.){3}([1-2]?[0-9]?[0-9])[\'"]
^[^=\n]{0,199}SECRET[^=\n]{0,30}=\s*[^\n\s]{7,199}\s*$
^.{0,99}\W(recv|argv|fread|fgets|scanf|fscanf).{0,199}$
client_secret[^\n]+\W[a-zA-Z0-9\+\-\_\/]{32}\W.{0,199}$
\Wselect\s+[a-zA-z0-9\.,\*]+\s+from.{1,80}{\d+}.{0,99}$
\Whttp\.(Client|Get|Post|PostForm|NewRequest)\W.{0,99}$
security (concern|problem|vulnerability|issue).{0,199}$
Authorization:\s*\w+\s*[A-Za-z0-9.+=_@!^&*()-?]{8,200}\W
^[^=\n]{0,199}PASSWORD[^=\n]{0,30}=\s*[^\n\s]{7,199}\s*$
\W(asan|address_sanitizer|no_sanitize_address)\W.{0,200}$
(^|[^A-Z0-9])(AKIA|ASIA)[A-Z0-9]{16}($|[^A-Z0-9]).{0,99}$
inflate.*[0123456789.]{3,}.*Copyright.*Mark.*Adler.{0,99}$
\[(WebMethod|WebService|ScriptMethod|ScriptService).{0,99}$
\Whttp\.(ListenAndServe|Handle|HandleFunc|Server)\W.{0,99}$
\W(ExecuteSqlCommand|ExecuteSqlCommandAsync|SqlQuery).{0,99}$
\W(ExecuteSqlCommand|ExecuteSqlCommandAsync|SqlQuery).{0,99}$
^.{0,99}\W(system|strcpy|strcat|memcpy|sprintf)\s*\(.{0,199}$
(?i)telegram[^=]*=[^=]*[0-9]{1,12}+:[0-9a-zA-Z-]{32,44}.{0,99}$
^\s*key:\s*[a-zA-Z0-9\.\-\_\!\?\#\&\*\:\;\@\(\)\<\>\%]{10,}\s*$
(MDB_VERSION_MAJOR|MDB_VERSION_MINOR|MDB_VERSION_PATCH).{0,99}$
\W(OleDbConnection|ADODB\.|System\.Data\.Sql|\.ResultSet).{0,99}$
\W(openssl_random_pseudo_bytes|random_int|random_bytes)\W.{0,99}$
^\s*secret:\s*[a-zA-Z0-9\.\-\_\!\?\#\&\*\:\;\@\(\)\<\>\%]{18,}\s*$
[\s"\'^\(\{\[]root/[a-zA-Z0-9\.\-\_\!\?\#\&\*\:\;\@\(\)\<\>\%]{12,}
^.{0,99}\W(request.form|session|args|environ|\+\W*\w+\W*\+).{0,199}$
^\s*password:\s*[a-zA-Z0-9\.\-\_\!\?\#\&\*\:\;\@\(\)\<\>\%]{10,}\s*$
"[\s\(]*\b(select|insert|update|delete)\b.{0,199}"\s*\+\s*\w+.{0,99}$
\W(mt_rand|mt_srand|lcg_value|rand|uniqid|microtime|shuffle)\W.{0,99}$
(AWS_ACCESS_KEY_ID|AWS_SECRET_ACCESS_KEY|AWS_DEFAULT_REGION).{20,199}$
^\s*access_token:\s*[a-zA-Z0-9\.\-\_\!\?\#\&\*\:\;\@\(\)\<\>\%]{18,}\s*$
(OpenSubKey|RegOpenKey|RegQueryInfoKey|RegQueryValue|RegSetValue).{0,99}$
\W(RequestMinimum|RequestOptional|SkipVerification|UnmanagedCode).{0,99}$
(DSN|DATASOURCE|UID|USER\sID|USER)=[^;].{1,99}(PASSWORD|PWD)=[^;].{1,99}$
\W(CryptAcquireContext|CryptDeriveKey|CryptGenKey|CryptGenRandom)\W.{0,99}$
(Mkdir|WriteFile|Chmod|OpenFile|FileMode|\Wos\.)\W0[0-7][0-7][1-7]\W.{0,99}$
^.{0,99}\W(loads|load|open|route|request.args|get_json|get|read)\s*\(.{0,199}$
^.{0,99}\W(HttpHeaders|URI|setHeader|uploadFile|File|createFile|save)\W.{0,199}$
^.{0,99}\W(system|check_output|execute|subprocess.call|Popen|popen)\s*\(.{0,199}$
^.{0,99}\W(params|query_parameters|path_parameters|get|post|query_string)\W.{0,199}$
tenant_id[^\n]+[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}.{0,199}$
(Mkdir|WriteFile|Chmod|OpenFile|FileMode|\Wos\.)\W0[0-7][0-7](1|2|3|5|6|7)\W.{0,99}$
client_id[^\n]+[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}.{0,199}$
\W(strlcpy|strlcat|strncpy|strncat|strcpy_s|strcat_s)\s*\([^,]+,\s*([^,]+)\s*,[^,;}]+\2
\W(AES|DES|SHA|SHA1|SHA2|SHA256|SHA512|blowfish|MD5|IDEA|RSA|DSA|MD4|SHA3|HMAC)\W.{0,99}$
[^/]userName:\s*[\.a-zA-Z0-9\_\-]+@[\.a-zA-Z0-9\_\-]+(\.[\.a-zA-Z0-9\_\-]+)+[^\n]{0,200}$
("|\')\s*(SELECT|INSERT|UPDATE|DELETE|CREATE|ALTER|DROP|TRUNCATE|USE)\s.*\$.*("|\').{0,99}$
("|\')\s*(SELECT|INSERT|UPDATE|DELETE|CREATE|ALTER|DROP|TRUNCATE|USE)\s.*\%.*("|\').{0,99}$
\W(strlcpy|strlcat|strncpy|strncat|strcpy_s|strcat_s)\s*\([^,]+,\s*([^,]+)\s*,[^,;}]+\W\2\W
\W(Application_OnAuthenticateRequest|Application_OnAuthorizeRequest|Session_OnStart).{0,99}$
(HKEY_LOCAL_MACHINE|HKEY_CURRENT_USER|HKEY_CLASSES_ROOT|HKEY_USERS|HKEY_CURRENT_CONFIG).{0,99}$
^.{0,99}\W(QueryString|Request|HttpGet|HttpPost|HttpPut|FromBase64String|Parse|Load)\W.{0,199}$
^.{0,99}\W(\$_POST|\$_GET|\$_REQUEST|\$_COOKIE|readline|fscanf|fgets|file_get_contents).{0,199}$
("|\')\s*(SELECT|INSERT|UPDATE|DELETE|CREATE|ALTER|DROP|TRUNCATE|USE)\s.*\{\d+\}.*("|\').{0,99}$
\W(LoadLibrary|LoadLibraryA|LoadLibraryW|LoadLibraryEx|LoadLibraryExA|LoadLibraryExW)\([^/\n]{0,199}$
^(.{0,10})export .{0,99}(LOGIN|USER|KEY|SECRET|BUCKET|TOKEN|CREDS|CREDENTIAL|PASS|AUTH).{0,99}=[^$]{6,199}$
(strlcpy|strlcat|strncpy|strncat|strcpy_s|strcat_s)\s*\(\s*\s*[^,]+\s*,\s*([^,]+)\s*,\s*(strlen|sizeof)\s*\2\W
["\'](chmod|chown|cmd.exe|copy|cp|git|gzip|mkdir|mktemp|rm|ssh|tar|unzip|/bin/sh|gunzip|del|cat|sed)\s.{0,199}$
^.{0,99}\W(execute|HttpClient|PostMethod|exec|Runtime|executeMethod|SqlQuery|executeQuery|QueryBuilder)\W.{0,199}$
^[^\n]{0,99}\$\w+[^\n]{0,99}\s+(AND|OR)\s+[^\n]{0,99}\sIN\s*\([^\n]{0,99}\.[^\n]{0,99}\$\w+[^\n]{0,99}\)[^\n]{0,99}$
(strlcpy|strlcat|strncpy|strncat|strcpy_s|strcat_s)\s*\(\s*\s*[^,]+\s*,\s*([^,]+)\s*,\s*(strlen|sizeof)\s*\(\s*\2\s*\)
(AWSSecretKey|AwsDevSecretKey|SecretKey|ClientSecret|BasicAWSCredentials|clientSecret|AWS_SECRET_KEY|AgentToken).{0,199}$
^.{0,99}\W(PathVariable|RequestBody|requestBody|RequestHeader|queryString|RequestParam|getParameter|GetMapping)\W.{0,199}$
\W(FileInputStream|FilterInputStream|SequenceInputStream|StringBufferInputStream|ByteArrayInputStream|FileOutputStream).{0,99}$
^.{0,99}\W(rename|makedirs|open|write|HTTPAdapter|Request|urlopen|make_response|dumps|redirect|jsonify|chdir|remove)\s*\(.{0,199}$
^.{0,99}\W(FromBase64String|Parse|Load|JSONObject|InputStreamReader|BufferedReader|readLine|params|Param|RequestMapping)\W.{0,199}$
\W(asshole|bastard|brainfuck|cock|crap|crappy|cunt|dick|flippin|flipping|fuck|fucking|motherfucker|screwed|shit|pussy|tits)\W.{0,99}$
(strlcpy|strlcat|strncpy|strncat|strcpy_s|strcat_s)\s*\(\s*(\([^\)]*\))\s*[^,]+\s*,\s*([^,]+)\s*,\s*(strlen|sizeof)\s*(\()?\s*\3\s*(\))?
^.{0,99}\W(WriteFile|FileSystem|SimpleDB|ExecuteSqlCommand|SqlCommand|ProcessStartInfo|CreateProcess|WriteAllText|HttpClient)\W.{0,199}$
(accesskey|secretkey|apisecret|apikey|GSUsername|GSPassword|SteamBuildMachineUsername|SteamBuildMachinePassword|S3BucketName).{0,99}[=:].{0,99}$
^.{0,99}\W(IO.binread|IO.binwrite|IO.foreach|JSON.load|JSON.parse|popen|read|write|eval|exec|spawn|syscall|system|eval|constantize|render).{0,199}$
(?i)(NOLINT|\Wnosem\W|noinspection|safesql|coverity|fortify|veracode|Prefast|DevSkim|checkmarx|\Wnosec\W|\WNOSONAR\W|@SuppressWarnings|\Wnoqa\W).{0,99}$
^.{0,99}\W(assert|copy|eval|exec|file|fopen|include|mssql_query|mysqli_query|pcntl_exec|pg_query|popen|require|require_once|shell_exec|system)\s*\(.{0,199}$
\W(ftime|gettimeofday|GetTickCount|GetTickCount64|QueryPerformanceCounter|GetSystemTime|GetLocalTime|GetSystemTimeAsFileTime|NtQuerySystemTime|time|uniqid|microtime)\(.{0,99}$